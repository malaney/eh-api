openapi: 3.0.0
info:
  title: SIP API
  version: '1.0'
  description: API for SIP Platform
  contact:
    name: Malaney J Hill
    email: malaney@gmail.com
  license:
    name: Apache 2.0
servers:
  - url: 'http://localhost:3000'
paths:
  '/offer/{offer_id}':
    get:
      summary: Get offer
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                offer:
                  value:
                    id: 1234
                    player: Player Name
                    price: 5
                    quantity: 10
                    match_criteria: Exact
                    is_active: true
                    created_date: '2019-10-02 22:23:23'
        '404':
          description: Not Found
      description: Get details about a particular offer
      operationId: getOffer
    parameters:
      - schema:
          type: string
        name: offer_id
        in: path
        required: true
  '/player/{player_id}/prices':
    parameters:
      - schema:
          type: string
        name: player_id
        in: path
        required: true
    get:
      description: Get prices for a player
      parameters:
        - schema:
            type: number
          in: query
          name: player_id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              examples:
                prices:
                  value:
                    success: true
                    results:
                      - date: '2019-10-22'
                        price: 5.12
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: getPlayerPrices
      tags:
        - user
        - player
  '/player/{player_id}/sell':
    parameters:
      - type: string
        name: player_id
        in: path
        required: true
        schema:
          type: number
    post:
      summary: Place sell order
      tags:
        - user
        - offer
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                price:
                  type: string
                quantity:
                  type: string
                match_criteria:
                  type: string
                  enum:
                    - exact
                    - fuzzy
              required:
                - price
                - quantity
                - match_criteria
      description: Make a sell offer for player.
      operationId: makeSellOfferForPlayer
  '/offer/{offer_id}/cancel':
    parameters:
      - type: string
        name: offer_id
        in: path
        required: true
    put:
      summary: Cancel offer
      tags:
        - user
      responses:
        '200':
          description: OK
      description: |
        Cancel an offer
      operationId: cancelOffer
  /offers:
    get:
      summary: Get active offers
      tags:
        - user
        - offer
      responses:
        '200':
          description: OK
      description: Get active offers
      requestBody: {}
      operationId: getOffers
  '/account/{account_id}':
    post:
      summary: Create account
      tags:
        - user
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Create an account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                account_type:
                  type: string
      operationId: createAccount
    get:
      summary: Get account
      tags:
        - user
        - account
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      description: Retrieve account
      operationId: getAccount
    put:
      summary: Update Account
      tags:
        - user
        - account
      responses:
        '200':
          description: OK
      operationId: updateAccount
      description: Update Account
    delete:
      summary: Remove Account
      tags:
        - user
        - account
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Remove an account
      operationId: removeAccount
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
  '/account/{account_id}/deposit':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    post:
      summary: Deposit to account
      tags:
        - user
        - account
      responses:
        '200':
          description: OK
      description: Deposit funds to account
      operationId: depositToAccount
  '/account/{account_id}/withdraw':
    parameters:
      - type: string
        name: account_id
        in: path
        required: true
    post:
      summary: Withdraw from account
      tags:
        - user
        - account
      responses:
        '200':
          description: OK
      description: Withdraw funds from account
      operationId: withdrawFromAccount
  /accounts:
    get:
      summary: ''
      responses:
        '200':
          description: OK
      operationId: getAccounts
      description: Get accounts
      tags:
        - user
        - account
  /holdings:
    get:
      summary: Get holdings
      tags:
        - user
        - offer
      responses:
        '200':
          description: OK
      operationId: getHoldings
      description: Get Holdings
  '/player/{player_id}/buy':
    parameters:
      - type: string
        name: player_id
        in: path
        required: true
    post:
      summary: Place buy order
      tags:
        - user
      responses:
        '200':
          description: OK
      description: Place buy order
      operationId: placeBuyOrder
components:
  schemas: {}
